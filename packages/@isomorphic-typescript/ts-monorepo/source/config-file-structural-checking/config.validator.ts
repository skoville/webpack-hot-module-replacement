/* tslint:disable */
// generated by typescript-json-validator
import {inspect} from 'util';
import Ajv = require('ajv');
import TSMonorepoConfig from './config';
export const ajv = new Ajv({"allErrors":true,"coerceTypes":false,"format":"fast","nullable":true,"unicode":true,"uniqueItems":true,"useDefaults":true});

ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));

export {TSMonorepoConfig};
export const TSMonorepoConfigSchema = {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "defaultProperties": [
  ],
  "definitions": {
    "PackageJSON": {
      "defaultProperties": [
      ],
      "properties": {
        "dependencies": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "devDependencies": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "peerDependencies": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProjectDescriptor": {
      "defaultProperties": [
      ],
      "properties": {
        "configs": {
          "defaultProperties": [
          ],
          "properties": {
            "package.json": {
              "$ref": "#/definitions/PackageJSON"
            },
            "tsconfig.json": {
              "$ref": "#/definitions/TSConfigJSON"
            }
          },
          "required": [
            "package.json",
            "tsconfig.json"
          ],
          "type": "object"
        }
      },
      "required": [
        "configs"
      ],
      "type": "object"
    },
    "TSConfigJSON": {
      "defaultProperties": [
      ],
      "type": "object"
    }
  },
  "properties": {
    "baseConfigs": {
      "defaultProperties": [
      ],
      "properties": {
        "package.json": {
          "$ref": "#/definitions/PackageJSON"
        },
        "tsconfig.json": {
          "$ref": "#/definitions/TSConfigJSON"
        }
      },
      "required": [
        "package.json",
        "tsconfig.json"
      ],
      "type": "object"
    },
    "packageRoot": {
      "type": "string"
    },
    "packages": {
      "additionalProperties": {
        "$ref": "#/definitions/ProjectDescriptor"
      },
      "defaultProperties": [
      ],
      "type": "object"
    },
    "version": {
      "type": "string"
    }
  },
  "required": [
    "baseConfigs",
    "packageRoot",
    "packages",
    "version"
  ],
  "type": "object"
};
export type ValidateFunction<T> = ((data: unknown) => data is T) & Pick<Ajv.ValidateFunction, 'errors'>
const rawValidateTSMonorepoConfig = ajv.compile(TSMonorepoConfigSchema) as ValidateFunction<TSMonorepoConfig>;
export default function validate(value: unknown): TSMonorepoConfig {
  if (rawValidateTSMonorepoConfig(value)) {
    return value;
  } else {
    throw new Error(
      ajv.errorsText(rawValidateTSMonorepoConfig.errors, {dataVar: 'TSMonorepoConfig'}) +
      '\n\n' +
      inspect(value),
    );
  }
}